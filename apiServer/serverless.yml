service: arc-hive-api
provider:
  name: aws
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:ListBucket'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - ${env:S3_BIN_BUCKET}
    - Effect: 'Allow'
      Action:
        - 's3:getObject'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - ${env:S3_BIN_BUCKET}
            - '/*'
  runtime: nodejs10.x
  stage: dev
  region: us-west-2
  memorySize: 128
  vpc:
    securityGroupIds:
      - ${env:SECGRP1}
    subnetIds:
      - ${env:SUBNET1}
      - ${env:SUBNET2}
functions:
  app:
    handler: api.handler
    environment:
        OIDC_ID_META: ${env:OIDC_ID_META}
        OIDC_CLIENT_ID: ${env:OIDC_CLIENT_ID}
        OIDC_ISS: ${env:OIDC_ISS}
        OIDC_AUD: ${env:OIDC_AUD}
        MONGO_STRING: ${env:MONGO_STRING}
        MONGO_CONTENT_COLLECTION: ${env:MONGO_CONTENT_COLLECTION}
        MONGO_AUTHZ_COLLECTION: ${env:MONGO_AUTHZ_COLLECTION}
        S3_BIN_BUCKET: ${env:S3_BIN_BUCKET}
    events:
      - http: 
          path: /doc
          method: post
          cors: true
      - http: 
          path: /docs
          method: post
          cors: true
      - http: 
          path: /download/{proxy+}
          method: get
          cors: true
      - http: 
          path: /image/{proxy+}
          method: get
          cors: true
          response:
            headers:
              Content-Type: 'image/png'
plugins:
  - serverless-dotenv-plugin
  - serverless-offline
